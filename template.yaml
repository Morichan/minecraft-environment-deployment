AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM Template for Minecraft Environment Deployment


Parameters:
  MinecraftDomain:
    Type: String
    Description: Public domain to connect to Minecraft server (ECS container task)
    Default: 'null'
  MinecraftSubDomain:
    Type: String
    Description: Public sub-domain to connect to Minecraft server (ECS container task)
    Default: 'null'
  MinecraftHostedZoneId:
    Type: String
    Description: Hosted zone ID for public domain to connect to Minecraft server
    Default: 'null'
  MinecraftServerImage:
    Type: String
    Description: Container image's $REPOSITORY_URL/$IMAGE:$TAG for Minecraft server
  IsCreatedNLB:
    Type: String
    Description: |
      Is created NLB or not.
      If is not created (== 'true'), no running costs but no the Internet connection (i.e., no connection to the Minecraft server).
      To use for switching on/off by Switcher Lambda Function.
    Default: 'true'
  DesiredECSTaskCount:
    Type: Number
    Description: |
      Number of running ECS task on ECS server.
      If is 0, no running costs but no running server (i.e., no connection to the Minecraft server).
      To use for switching on/off by Switcher Lambda Function.
    Default: 1
  HostedZoneIdForS3:
    Type: String
    Description: |
      Default parameter is from Asia Pacific (Tokyo) region (ap-northeast-1).
      Details > https://docs.aws.amazon.com/general/latest/gr/s3.html#s3_website_region_endpoints
    Default: Z2M4EHUR26P7ZW
  ResourceTagKey:
    Type: String
    Description: Tag key to be associated with resources, almost identical to the key name auto-generated by SAM-CLI (difference is prefix `aws` to `minecraft`,) set AWS::StackName to value
    Default: minecraft:cloudformation:stack-name


Conditions:
  IsCreatedNLB: !Equals [ !Ref IsCreatedNLB, 'true' ]
  IsSetCustomDomain: !Not [ !Equals [ !Ref MinecraftDomain, 'null' ] ]
  IsSetCustomSubDomain: !Not [ !Equals [ !Ref MinecraftSubDomain, 'null' ] ]
  IsReusedHostedZone: !Not [ !Equals [ !Ref MinecraftHostedZoneId, 'null' ] ]


Resources:
  # VPC
  MinecraftVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.10.0.0/24
      EnableDnsHostnames: true
  MinecraftVPCPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MinecraftVPC
      CidrBlock: 10.10.0.0/28
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
      - 0
      - Fn::GetAZs: !Ref AWS::Region
  MinecraftVPCSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: For Minecraft server
      VpcId: !Ref MinecraftVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 25565
        ToPort: 25565
        CidrIp: 0.0.0.0/0
      - IpProtocol: udp
        FromPort: 25565
        ToPort: 25565
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: -1
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0

  # IGW
  MinecraftVPCIGW:
    Type: AWS::EC2::InternetGateway
  MinecraftVPCIGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref MinecraftVPCIGW
      VpcId: !Ref MinecraftVPC

  # RoutingTable
  MinecraftVPCRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MinecraftVPC
  MinecraftVPCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MinecraftVPCRouteTable
      SubnetId: !Ref MinecraftVPCPublicSubnet
  MinecraftVPCRoute:
    Type: AWS::EC2::Route
    Properties:
      GatewayId: !Ref MinecraftVPCIGW
      RouteTableId: !Ref MinecraftVPCRouteTable
      DestinationCidrBlock: 0.0.0.0/0

  # NLB
  MinecraftVPCPublicSubnetNLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Condition: IsCreatedNLB
    Properties:
      Type: network
      Subnets:
      - !Ref MinecraftVPCPublicSubnet
      Tags:
      - Key: !Ref ResourceTagKey
        Value: !Ref AWS::StackName
  MinecraftVPCPublicSubnetNLBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Condition: IsCreatedNLB
    Properties:
      VpcId: !Ref MinecraftVPC
      TargetType: ip
      Protocol: TCP_UDP
      Port: 25565
  MinecraftVPCPublicSubnetNLBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Condition: IsCreatedNLB
    Properties:
      LoadBalancerArn: !Ref MinecraftVPCPublicSubnetNLB
      Protocol: TCP_UDP
      Port: 25565
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref MinecraftVPCPublicSubnetNLBTargetGroup

  # Route53
  MinecraftRoute53HostedZone:
    Type: AWS::Route53::HostedZone
    Condition: IsSetCustomDomain
    Properties:
      Name: !Ref MinecraftDomain
      HostedZoneTags:
      - Key: !Ref ResourceTagKey
        Value: !Ref AWS::StackName
  MinecraftRoute53RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Condition: IsSetCustomSubDomain
    Properties:
      HostedZoneId: !If
      - IsReusedHostedZone
      - !Ref MinecraftHostedZoneId
      - !Ref MinecraftRoute53HostedZone
      RecordSets:
      - Type: A
        Name: !Sub ${MinecraftSubDomain}.
        AliasTarget: !If
        - IsCreatedNLB
        - HostedZoneId: !GetAtt MinecraftVPCPublicSubnetNLB.CanonicalHostedZoneID
          DNSName: !GetAtt MinecraftVPCPublicSubnetNLB.DNSName
        - HostedZoneId: !Ref HostedZoneIdForS3
          DNSName: !Sub s3-website-${AWS::Region}.amazonaws.com

  # ECS
  MinecraftECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${AWS::StackName}-minecraft
  MinecraftECSTask:
    Type: AWS::ECS::TaskDefinition
    DependsOn: MinecraftBucket
    Properties:
      Family: minecraft
      Cpu: 1024
      Memory: 2048
      RuntimePlatform:
        CpuArchitecture: ARM64
      RequiresCompatibilities:
      - FARGATE
      NetworkMode: awsvpc
      TaskRoleArn: !Ref MinecraftECSTaskRole
      ExecutionRoleArn: !Ref MinecraftECSTaskExecRole
      ContainerDefinitions:
      - Name: minecraft-server
        Image: !Ref MinecraftServerImage
        MemoryReservation: 1024
        PortMappings:
        - ContainerPort: 25565
        StopTimeout: 120
        Essential: true
        Environment:
        - Name: BUCKET_NAME
          Value: !Ref AWS::StackName
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-region: !Ref AWS::Region
            awslogs-group: !Ref MinecraftECSLogGroup
            awslogs-stream-prefix: minecraft
      Tags:
      - Key: !Ref ResourceTagKey
        Value: !Ref AWS::StackName
  MinecraftECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref MinecraftECSCluster
      ServiceName: minecraft
      LaunchType: FARGATE
      TaskDefinition: !Ref MinecraftECSTask
      DesiredCount: !Ref DesiredECSTaskCount
      DeploymentConfiguration:
        MinimumHealthyPercent: 0
      EnableExecuteCommand: true
      LoadBalancers:
      - !If
        - IsCreatedNLB
        - ContainerName: minecraft-server
          ContainerPort: 25565
          TargetGroupArn: !Ref MinecraftVPCPublicSubnetNLBTargetGroup
        - !Ref AWS::NoValue
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
          - !Ref MinecraftVPCSG
          Subnets:
          - !Ref MinecraftVPCPublicSubnet
      Tags:
      - Key: !Ref ResourceTagKey
        Value: !Ref AWS::StackName
      # ECS service depends on NLB Listener but DependsOn cannot use Fn::If
      - !If
        - IsCreatedNLB
        - Key: NLBListener
          Value: !Ref MinecraftVPCPublicSubnetNLBListener
        - !Ref AWS::NoValue
  MinecraftECSLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /ecs/logs/${AWS::StackName}/minecraft-server
      RetentionInDays: 14
      Tags:
      - Key: !Ref ResourceTagKey
        Value: !Ref AWS::StackName

  # S3
  MinecraftBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref AWS::StackName

  ## NLBリソースを削除している際にもRoute53のHostedZoneでドメイン登録するために
  ## 用意しているダミーS3バケット
  HoldedDomainSettingsBucket:
    Type: AWS::S3::Bucket
    Condition: IsSetCustomSubDomain
    Properties:
      BucketName: !Ref MinecraftSubDomain

  # Lambda
  MinecraftSwitcher:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-minecraft-switcher
      CodeUri: src/
      Handler: app.handler
      Runtime: python3.9
      Architectures:
      - arm64
      FunctionUrlConfig:
        AuthType: NONE
      Environment:
        Variables:
          STACK_NAME: !Ref AWS::StackName
          SWITCHED_PARAMETER: 'IsCreatedNLB'
          CHANGED_TASK_COUNT_PARAMETER: 'DesiredECSTaskCount'
      Policies:
      - ElasticLoadBalancingReadOnly
      - AmazonRoute53ReadOnlyAccess
      - CloudFormationDescribeStacksPolicy: !Ref AWS::NoValue
      - Route53ChangeResourceRecordSetsPolicy:
          HostedZoneId: '*'
      - Statement:
        - Sid: CloudFormationUpdateStack
          Effect: Allow
          Action:
          - cloudformation:*
          Resource:
          - !Ref AWS::StackId
        - Sid: ECSUpdateService
          Effect: Allow
          Action: '*'
          Resource:
          - !Ref MinecraftECSService
        - Sid: IAMPassRole
          Effect: Allow
          Action:
          - iam:GetRole
          - iam:PassRole
          Resource:
          - !GetAtt MinecraftECSTaskExecRole.Arn
          - !GetAtt MinecraftECSTaskRole.Arn
        - Sid: NLBUpdate
          Effect: Allow
          Action:
          - elasticloadbalancing:CreateLoadBalancer
          - elasticloadbalancing:DeleteLoadBalancer
          - elasticloadbalancing:CreateTargetGroup
          - elasticloadbalancing:DeleteTargetGroup
          - elasticloadbalancing:CreateListener
          - elasticloadbalancing:DeleteListener
          Resource:
          - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:loadbalancer/net/*
          - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:targetgroup/*
          - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:listener/net/*
        - Sid: Route53UpdateHostedZone
          Effect: Allow
          Action:
          - route53:CreateHostedZone
          - route53:DeleteHostedZone
          Resource: '*'
        - Sid: LambdaGetURLConfig
          Effect: Allow
          Action:
          - lambda:GetFunctionUrlConfig
          Resource:
          - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*
  MinecraftSwitcherLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${MinecraftSwitcher}
      RetentionInDays: 14
      Tags:
      - Key: !Ref ResourceTagKey
        Value: !Ref AWS::StackName

  # IAM
  MinecraftECSTaskExecRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-minecraft-server-task-exec-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ecs-tasks.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Tags:
      - Key: !Ref ResourceTagKey
        Value: !Ref AWS::StackName
  MinecraftECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-minecraft-server-task-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ecs-tasks.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonS3FullAccess
      - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Tags:
      - Key: !Ref ResourceTagKey
        Value: !Ref AWS::StackName


Outputs:
  MinecraftSwitcherURL:
    Description: MinecraftSwitcher Lambda function endpoint URL
    Value: !GetAtt MinecraftSwitcherUrl.FunctionUrl
