AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM Template for Minecraft Environment Deployment


Parameters:
  MinecraftServerImage:
    Type: String
    Description: Container image's $REPOSITORY_URL/$IMAGE:$TAG for Minecraft server
  ResourceTagKey:
    Type: String
    Description: Tag key to be associated with resources, almost identical to the key name auto-generated by SAM-CLI (difference is prefix `aws` to `minecraft`,) set AWS::StackName to value
    Default: minecraft:cloudformation:stack-name


Resources:
  # VPC
  MinecraftVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.10.0.0/24
      EnableDnsHostnames: true
  MinecraftVPCPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MinecraftVPC
      CidrBlock: 10.10.0.0/28
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
      - 0
      - Fn::GetAZs: !Ref AWS::Region
  MinecraftVPCSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: For Minecraft server
      VpcId: !Ref MinecraftVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 25565
        ToPort: 25565
        CidrIp: 0.0.0.0/0
      - IpProtocol: udp
        FromPort: 25565
        ToPort: 25565
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: -1
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0

  # IGW
  MinecraftVPCIGW:
    Type: AWS::EC2::InternetGateway
  MinecraftVPCIGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref MinecraftVPCIGW
      VpcId: !Ref MinecraftVPC

  # RoutingTable
  MinecraftVPCRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MinecraftVPC
  MinecraftVPCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MinecraftVPCRouteTable
      SubnetId: !Ref MinecraftVPCPublicSubnet
  MinecraftVPCRoute:
    Type: AWS::EC2::Route
    Properties:
      GatewayId: !Ref MinecraftVPCIGW
      RouteTableId: !Ref MinecraftVPCRouteTable
      DestinationCidrBlock: 0.0.0.0/0

  # NLB
  MinecraftVPCPublicSubnetNLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: network
      Subnets:
      - !Ref MinecraftVPCPublicSubnet
      Tags:
      - Key: !Ref ResourceTagKey
        Value: !Ref AWS::StackName
  MinecraftVPCPublicSubnetNLBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref MinecraftVPC
      TargetType: ip
      Protocol: TCP_UDP
      Port: 25565
  MinecraftVPCPublicSubnetNLBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref MinecraftVPCPublicSubnetNLB
      Protocol: TCP_UDP
      Port: 25565
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref MinecraftVPCPublicSubnetNLBTargetGroup

  # ECS
  MinecraftECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: minecraft
  MinecraftECSTask:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: minecraft
      Cpu: 1024
      Memory: 2048
      RuntimePlatform:
        CpuArchitecture: ARM64
      RequiresCompatibilities:
      - FARGATE
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref MinecraftECSTaskExecRole
      ContainerDefinitions:
      - Name: minecraft-server
        Image: !Ref MinecraftServerImage
        MemoryReservation: 1024
        PortMappings:
        - ContainerPort: 25565
        Essential: true
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-region: !Ref AWS::Region
            awslogs-group: !Ref MinecraftECSLogGroup
            awslogs-stream-prefix: minecraft
      Tags:
      - Key: !Ref ResourceTagKey
        Value: !Ref AWS::StackName
  MinecraftECSService:
    Type: AWS::ECS::Service
    DependsOn:
    - MinecraftVPCPublicSubnetNLBListener
    Properties:
      Cluster: !Ref MinecraftECSCluster
      ServiceName: minecraft
      LaunchType: FARGATE
      TaskDefinition: !Ref MinecraftECSTask
      DesiredCount: 1
      DeploymentConfiguration:
        MinimumHealthyPercent: 0
      LoadBalancers:
      - ContainerName: minecraft-server
        ContainerPort: 25565
        TargetGroupArn: !Ref MinecraftVPCPublicSubnetNLBTargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
          - !Ref MinecraftVPCSG
          Subnets:
          - !Ref MinecraftVPCPublicSubnet
      Tags:
      - Key: !Ref ResourceTagKey
        Value: !Ref AWS::StackName
  MinecraftECSLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/logs/minecraft-server
      Tags:
      - Key: !Ref ResourceTagKey
        Value: !Ref AWS::StackName

  # IAM
  MinecraftECSTaskExecRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: minecraft-server-task-execution-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ecs-tasks.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Tags:
      - Key: !Ref ResourceTagKey
        Value: !Ref AWS::StackName
